-- DROP FUNCTION IF EXISTS listar_pedidos_dia(p_zonas text[]);

CREATE OR REPLACE FUNCTION public.listar_pedidos_dia(p_zonas text[])
    RETURNS TABLE(id integer,
				  order_cod text,
				  client_cod text,
				  client text, 
				  product text, 
				  quantity text, 
				  width text, 
				  length text, 
				  zone text, 
				  coordinates text, 
				  delivery_date date) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000
AS $BODY$
BEGIN
    RETURN QUERY
    WITH zonas_ordenadas AS (
        SELECT 
            zona_filtro,
            ROW_NUMBER() OVER (ORDER BY ARRAY_POSITION(p_zonas, zona_filtro)) AS orden_zona
        FROM unnest(p_zonas) AS zona_filtro
    ),
    pedidos_ordenados AS (
        SELECT 
            p.id,
            p.order_cod::text,
            p.client_cod::text,
            p.client::text,
            p.product::text,
            p.quantity::text,
            p.width::text,
            p.length::text,
            p.zone::text,
            p.coordinates::text,
            p.delivery_date::date,
            ROW_NUMBER() OVER(PARTITION BY p.client_cod ORDER BY p.delivery_date DESC) AS fila,
            COALESCE(z.orden_zona, 999) AS orden_zona
        FROM 
            public.orders p
        LEFT JOIN zonas_ordenadas z ON p.zone ILIKE '%' || z.zona_filtro || '%'
        WHERE 
            p.status = 'Despacho'
            AND (p_zonas IS NULL OR z.zona_filtro IS NOT NULL)
    )
    SELECT 
		po.id,
        po.order_cod, 
        po.client_cod, 
		po.product, 
		po.quantity, 
        po.client,
        po.width,
        po.length,
        po.zone,
        po.coordinates,
        po.delivery_date
    FROM 
        pedidos_ordenados po
    WHERE 
        po.fila = 1
    ORDER BY 
        po.orden_zona, 
        po.delivery_date DESC;
END;
$BODY$;